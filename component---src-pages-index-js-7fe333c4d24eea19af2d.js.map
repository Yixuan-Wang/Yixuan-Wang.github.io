{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/pages/index.js"],"names":["SEO","type","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","siteTitle","htmlAttributes","name","content","property","withPrefix","concat","defaultProps","IndexPage","data","style","fontStyle","fontVariant","to"],"mappings":"2FAAA,iDAYA,SAASA,EAAT,GAAwD,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACpCC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAYJ,EAAKG,aAAaJ,MAEpC,OACE,kBAAC,SAAD,CACEM,eAAgB,CACdR,QAEFE,MAAOA,EAAWA,EAAN,MAAiBK,EAAcA,EAC3CN,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAASZ,GAEX,CACEa,SAAS,eACTD,QAASH,GAEX,CACEI,SAAS,WACTD,QAASE,qBAAW,eAEtBC,OAAOZ,KAKfJ,EAAIiB,aAAe,CACjBd,KAAK,UACLC,KAAM,GACNF,YAAY,GACZD,KAAK,UACLI,MAAM,IAUOL,O,kCCjFf,wDA6CekB,UA5BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,oCACE,kBAAC,IAAD,CAAKd,MAAM,KACX,4BAAKc,EAAKb,KAAKG,aAAaJ,OAC5B,2BACE,0BAAMe,MAAO,CAAEC,UAAW,WACvBF,EAAKb,KAAKG,aAAaP,aAE1B,6BACA,6CAEE,0BAAMkB,MAAO,CAAEE,YAAa,mBAA5B,2BAFF,qBAME,0BAAMF,MAAO,CAAEE,YAAa,mBAA5B,wBANF,OAYF,2BACE,kBAAC,OAAD,CAAMC,GAAG,WAAT,MADF,IAC+B,6BAC7B,kBAAC,OAAD,CAAMA,GAAG,YAAT","file":"component---src-pages-index-js-7fe333c4d24eea19af2d.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql, withPrefix } from 'gatsby';\n\nfunction SEO({ type, description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const siteTitle = site.siteMetadata.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title ? `${title} | ${siteTitle}` : siteTitle}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: type,\n        },\n        {\n          property: `og:site-name`,\n          content: siteTitle,\n        },\n        {\n          property: `og:image`,\n          content: withPrefix('/icon.png'),\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `zh-Hans`,\n  meta: [],\n  description: ``,\n  type: `webpage`,\n  title: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\n// import Icon from '../components/Icon';\nimport SEO from '../components/SEO';\n\nexport const query = graphql`\n  query QueryIndex {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n\nconst IndexPage = ({ data }) => (\n  <>\n    <SEO title=\"\" />\n    <h1>{data.site.siteMetadata.title}</h1>\n    <p>\n      <span style={{ fontStyle: 'italic' }}>\n        {data.site.siteMetadata.description}\n      </span>\n      <br />\n      <span>\n        As о(U+043E&nbsp;\n        <span style={{ fontVariant: 'all-small-caps' }}>\n          CYRILLIC SMALL LETTER O\n        </span>\n        ) is not o(U+006F&nbsp;\n        <span style={{ fontVariant: 'all-small-caps' }}>\n          LATIN SMALL LETTER O\n        </span>\n        ).\n      </span>\n    </p>\n    <p>\n      <Link to=\"/posts/\">文章</Link> <br />\n      <Link to=\"/sheets/\">清单</Link>\n    </p>\n  </>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}