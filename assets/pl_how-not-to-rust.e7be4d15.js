import{_ as l}from"./TheArticle.c49c5829.js";import{o as p,j as o}from"./app.b3b1e6f8.js";const y="How NOT to Rust \u8BB2\u5EA7\u7B14\u8BB0",F="2022-07-10T00:00:00.000Z",A="comp",i=["pl","rust"],C=["salon"],E={setup(e,{expose:n}){const s={title:"How NOT to Rust \u8BB2\u5EA7\u7B14\u8BB0",date:"2022-07-10T00:00:00.000Z",category:"comp",tags:["pl","rust"],keywords:["salon"]};return n({frontmatter:s}),(B,t)=>{const a=l;return p(),o(a,{frontmatter:s,inner:`<div><p>TUNA \u8BB2\u5EA7 How NOT to Rust \u7684\u7B80\u5355\u7B14\u8BB0\uFF0C\u4F5C\u4E3A\u79CD\u8349 Rust \u7684\u7EAA\u5FF5\u3002</p>
<!-- more -->
<p>\u539F\u6587\u53CA\u89C6\u9891\u8F7D TUNA \u535A\u5BA2\uFF1A<a href="https://tuna.moe/event/2021/how-not-to-rust/" target="_blank" rel="noopener">\u91D1\u67AA\u9C7C\u4E4B\u591C\uFF1AHow NOT to Rust - \u8BED\u8A00\u53D1\u5C55\u4E2D\u7684\u5931\u8BEF\u548C\u8865\u6551\u4E4B\u9009\u96C6 | \u6E05\u534E\u5927\u5B66 TUNA \u534F\u4F1A</a>\u3002</p>
<h2 id="\u957F\u5EA6\u4E3A\u6CDB\u578B\u7684\u6808\u4E0A\u5206\u914D\u6570\u7EC4" tabindex="-1">\u957F\u5EA6\u4E3A\u6CDB\u578B\u7684\u6808\u4E0A\u5206\u914D\u6570\u7EC4</h2>
<p>\u{1F7E2} \u89E3\u51B3</p>
<p>\u9700\u8981\u5E38\u91CF\u6CDB\u578B\uFF08const generics, <a href="https://rust-lang.github.io/rfcs/2000-const-generics.html" target="_blank" rel="noopener">RFC #2000</a>\uFF09\u7684\u652F\u6301\u300221 \u5E74\u51AC\uFF0C\u5728 1.51 \u4E2D<a href="https://blog.rust-lang.org/2021/02/26/const-generics-mvp-beta.html" target="_blank" rel="noopener">\u5E38\u91CF\u6CDB\u578B\u7EC8\u4E8E\u5343\u547C\u4E07\u5524\u59CB\u51FA\u6765</a>\uFF0C\u6210\u529F\u586B\u5751\uFF0C\u6807\u51C6\u5E93\u7684\u65B9\u6CD5\u4E5F\u4E0D\u518D\u9650\u5236\u6808\u4E0A\u6570\u7EC4\u957F\u5EA6\u5C0F\u4E8E\u7B49\u4E8E 32 \u4E86\uFF08\u4E4B\u524D\u7684\u6570\u7EC4\u771F\u7684\u6709\u529E\u6CD5\u7528\u5417\uFF1F\uFF09\u3002</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">enum</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">SingleOrArray</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">, </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">N</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">usize</span><span style="color: #ABB2BF">&gt; {</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #61AFEF">Single</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">),</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #61AFEF">Array</span><span style="color: #ABB2BF">([</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">; </span><span style="color: #E5C07B">N</span><span style="color: #ABB2BF">]),</span><span style="color: #7F848E; font-style: italic"> // &lt;- const generics</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>
<p>\u5728 C++ \u4E2D\uFF0C\u8FD9\u4E2A\u5E38\u91CF\u6CDB\u578B\uFF0C<s>\u4F60\u66FE\u89C1\u8FC7\u7684</s>\uFF0C\u5524\u4F5C\u6A21\u677F\u975E\u7C7B\u578B\u5F62\u53C2\uFF08<a href="https://en.cppreference.com/w/cpp/language/template_parameters#Template_non-type_arguments" target="_blank" rel="noopener">template non-type arguments</a>\uFF09\uFF1A</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">typename</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">, </span><span style="color: #C678DD">size_t</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">N</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">single_or_array</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">=</span><span style="color: #ABB2BF"> std::</span><span style="color: #E5C07B">variant</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">, std::</span><span style="color: #E5C07B">array</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">N</span><span style="color: #ABB2BF">&gt;&gt;;</span></span>
<span class="line"></span></code></pre>
<h2 id="\u7279\u5316" tabindex="-1">\u7279\u5316</h2>
<p>\u{1F7E0} \u6401\u7F6E</p>
<p>C++ \u5BF9\u7279\u5316\uFF08specialization\uFF09\u7684\u652F\u6301\u5F88\u597D\u3002\u9664\u4E86\u6A21\u677F\u7684<a href="https://en.cppreference.com/w/cpp/language/template_specialization" target="_blank" rel="noopener">\u7279\u5316</a>\u548C<a href="https://en.cppreference.com/w/cpp/language/partial_specialization" target="_blank" rel="noopener">\u504F\u7279\u5316</a>\uFF0C\u7279\u522B\u5730\uFF0CC++ 20 \u7684 <code>concept</code> \u4E5F\u89C4\u5B9A\u4E86\u7EA6\u675F\u7684\u504F\u5E8F\uFF08<a href="https://en.cppreference.com/w/cpp/language/constraints#Partial_ordering_of_constraints" target="_blank" rel="noopener">partial ordering of constraints</a>\uFF09\uFF0C\u4ECE\u800C\u652F\u6301\u4EE5\u4E0B\u7279\u5316\u9B54\u6CD5\uFF1A</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">typename</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">concept</span><span style="color: #ABB2BF"> CanA </span><span style="color: #C678DD">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">requires</span><span style="color: #ABB2BF">(T t) { </span><span style="color: #E5C07B">t</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">a</span><span style="color: #ABB2BF">(); };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">typename</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">concept</span><span style="color: #ABB2BF"> CanAB </span><span style="color: #C678DD">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">requires</span><span style="color: #ABB2BF">(T t) { </span><span style="color: #E5C07B">t</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">b</span><span style="color: #ABB2BF">(); } </span><span style="color: #56B6C2">&amp;&amp;</span><span style="color: #ABB2BF"> CanA</span><span style="color: #C678DD">&lt;</span><span style="color: #ABB2BF">T</span><span style="color: #C678DD">&gt;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">// CanAB is more SPECIFIC than CanA</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">struct</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">A</span><span style="color: #ABB2BF"> { </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">a</span><span style="color: #ABB2BF">() {} };</span></span>
<span class="line"><span style="color: #C678DD">struct</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">AB</span><span style="color: #ABB2BF">: A { </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">b</span><span style="color: #ABB2BF">() {} };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">CanA</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75; font-style: italic">t</span><span style="color: #ABB2BF">) { std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;CanA&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> std::endl; }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">CanAB</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75; font-style: italic">t</span><span style="color: #ABB2BF">) { std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;CanAB&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> std::endl; }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">int</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">main</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">auto</span><span style="color: #ABB2BF"> ab </span><span style="color: #C678DD">=</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">AB</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">(ab);</span><span style="color: #7F848E; font-style: italic"> // CanAB</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>
<p>\u4F46 Rust \u7684 <code>trait</code> \u4E0D\u5141\u8BB8\u3002</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">trait</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Common</span><span style="color: #ABB2BF"> {}</span></span>
<span class="line"><span style="color: #C678DD">trait</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">CanA</span><span style="color: #ABB2BF"> {}</span></span>
<span class="line"><span style="color: #C678DD">trait</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">CanB</span><span style="color: #ABB2BF"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">CanA</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Common</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF"> {}</span></span>
<span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">CanA</span><span style="color: #ABB2BF"> + </span><span style="color: #E5C07B">CanB</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Common</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF"> {}</span><span style="color: #7F848E; font-style: italic"> // E0119: Conflicting implementations</span></span>
<span class="line"></span></code></pre>
<p>\u5C3D\u7BA1\u53EF\u4EE5\u7528 <code>#![feature(specialization)]</code> \u542F\u7528 <a href="https://rust-lang.github.io/rfcs/1210-impl-specialization.html" target="_blank" rel="noopener">RFC #1210</a> \u7684\u7279\u5316\uFF0C\u4F46\u5B83\u662F\u975E\u53EF\u9760\u7684\uFF08unsound\uFF09\uFF0C\u53EF\u80FD\u5F15\u53D1 UB\u3002\u8FD9\u4E2A RFC \u5DF2\u7ECF\u4E0D\u518D\u7EE7\u7EED\u63A8\u8FDB\u4E86\uFF0C\u53EF\u80FD\u8FD8\u662F\u8981\u7B49\u5F85\u65B0\u7684 <code>trait</code> \u89E3\u6790\u5F15\u64CE <code>chalk</code>\u3002</p>
<h2 id="\u53EF\u53D8\u53C2\u6570\u6CDB\u578B" tabindex="-1">\u53EF\u53D8\u53C2\u6570\u6CDB\u578B</h2>
<p>\u{1F534} \u65E0\u89E3</p>
<p>\u5728 C++ \u4E2D\uFF0C\u4F60\u53EF\u4EE5\u7528 <code>...</code> \u4E3A\u6A21\u677F\u548C\u51FD\u6570\u6307\u5B9A\u53EF\u53D8\u7684\u53C2\u6570\u5217\u8868\uFF08<a href="https://en.cppreference.com/w/cpp/language/parameter_pack" target="_blank" rel="noopener">parameter pack</a>\uFF09\uFF0C\u8FD9\u662F\u4E00\u79CD\u53EF\u53D8\u53C2\u6570\u6CDB\u578B\uFF08variadic generics\uFF09\u3002\u6BD4\u5982\uFF0C\u4EE5\u4E0B\u662F\u4E00\u4E2A\u63A5\u53D7\u4E0D\u5B9A\u7C7B\u578B\uFF08\u53EA\u9700\u6EE1\u8DB3\u7279\u5B9A\u7EA6\u675F\uFF09\u4E14\u4E0D\u5B9A\u957F\u5EA6\u7684\u53C2\u6570\u7684\u51FD\u6570\uFF1A</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">typename</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">concept</span><span style="color: #ABB2BF"> printable </span><span style="color: #C678DD">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">requires</span><span style="color: #ABB2BF">(T t) { std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> t; };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">template</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">printable</span><span style="color: #ABB2BF">... </span><span style="color: #E5C07B">Ts</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">print_all</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Ts</span><span style="color: #ABB2BF">... </span><span style="color: #E06C75; font-style: italic">args</span><span style="color: #ABB2BF">) {</span></span>
<span class="line"><span style="color: #ABB2BF">    ((std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> args </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39; &#39;</span><span style="color: #ABB2BF">), ...) </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> std::endl;</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">int</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">main</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">print_all</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">, </span><span style="color: #D19A66">2.3</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&#39;a&#39;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;string&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>
<p>\u4F46\u5728 Rust \u91CC\u505A\u4E0D\u5230\uFF0C\u53EA\u80FD\u7528\u5B8F\uFF0C\u4F46\u5B8F\u4E0D\u53EF\u80FD\u50CF\u6CDB\u578B\u4E00\u6837\u5C55\u5F00\u51FA\u65E0\u9650\u591A\u4E2A\u58F0\u660E\u3002\u6240\u4EE5\u5728\u6807\u51C6\u5E93\u91CC\u2026\u2026</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T0</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T1</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T2</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T3</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T4</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T5</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T6</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T7</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T8</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T9</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T10</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T11</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">T0</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T1</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T2</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T3</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T4</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T5</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T6</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T7</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T8</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T9</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T10</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">T11</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #C678DD">where</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T0</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T1</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T2</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T3</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T4</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T5</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T6</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T7</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T8</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T9</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T10</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">T11</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Debug</span><span style="color: #ABB2BF"> + ?</span><span style="color: #E5C07B">Sized</span><span style="color: #ABB2BF">,</span><span style="color: #7F848E; font-style: italic"> // OMG</span></span>
<span class="line"></span></code></pre>
<p>\u53EA\u6709\u529B\u6C14\u679A\u4E3E\u5230 12 \u4E2A \u{1F92F}\u3002\u5176\u4ED6\u65F6\u5019\uFF0C\u4F60\u53EA\u80FD\u81EA\u5DF1\u5B9A\u4E49 <code>struct(...)</code> \u5E76\u4E14\u7528 <code>#[derive]</code> \u6F14\u7ECE\uFF0C\u6216\u8005\u624B\u5199\u4E00\u4E2A\u5B9E\u73B0\u3002\u5728\u5E38\u91CF\u6CDB\u578B\u7A33\u5B9A\u524D\uFF0C\u6570\u7EC4\u4E5F\u662F\u7C7B\u4F3C\u7684\u4E0B\u573A\uFF08\u4F46\u66F4\u60E8\uFF0C\u679A\u4E3E\u4E86 32 \u4E2A\uFF09\u3002\u65E2\u7136\u5E38\u91CF\u6CDB\u578B\u7ECF\u8FC7\u4E94\u5E74\u957F\u8DD1\u7EC8\u4E8E\u7A33\u5B9A\u4E86\uFF0C\u90A3\u4E48\u53EF\u53D8\u53C2\u6570\u6CDB\u578B\u662F\u4E0D\u662F\u672A\u6765\u53EF\u671F\uFF1F\u975E\u4E5F\uFF0C\u5B83\u7684 <a href="https://github.com/rust-lang/rfcs/issues/376" target="_blank" rel="noopener">RFC #376</a> \u5DF2\u7ECF\u5361\u5728\u8349\u6848\u9636\u6BB5\u4E94\u5E74\u4E86\u3002</p>
<h2 id="default-\u548C\u7A7A\u6570\u7EC4" tabindex="-1"><code>Default</code> \u548C\u7A7A\u6570\u7EC4</h2>
<p>\u{1F7E0} \u6401\u7F6E</p>
<p>\u65E2\u7136\u5E38\u91CF\u6CDB\u578B\u7A33\u5B9A\u4E86\uFF0C\u4E3A\u4EC0\u4E48\u4E3A\u6570\u7EC4\u5B9E\u73B0\u7684 <code>Default</code> \u8FD8\u662F\u957F\u5EA6\u4E3A 32 \u7684\u679A\u4E3E\u5462\uFF1F\u56E0\u4E3A\uFF1A</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Default</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> [</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">; </span><span style="color: #D19A66">0</span><span style="color: #ABB2BF">]</span></span>
<span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Default</span><span style="color: #ABB2BF">, </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">N</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">usize</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Default</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> [</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">; </span><span style="color: #E5C07B">N</span><span style="color: #ABB2BF">]</span></span>
<span class="line"></span></code></pre>
<p>\u7A7A\u6570\u7EC4\u7684\u5143\u7D20\u4E0D\u662F <code>Default</code> \u4E5F\u6CA1\u95EE\u9898\uFF01\u6240\u4EE5\u4ECD\u7136\u9700\u8981\u7279\u5316\u624D\u80FD\u89E3\u51B3\u2026\u2026</p>
<h2 id="box-\u548C-box" tabindex="-1"><code>box</code> \u548C <code>Box</code></h2>
<p>\u{1F535} \u4E0D\u7A33\u5B9A</p>
<p>Rust \u7684\u5806\u4E0A\u5206\u914D\u539F\u672C\u7531\u7279\u6B8A\u7684\u8BED\u6CD5 <a href="https://rust-lang.github.io/rfcs/0059-remove-tilde.html" target="_blank" rel="noopener"><code>~</code></a> \u5B9E\u73B0\uFF0C\u4F46\u540E\u6765\u88AB\u5305\u88C5\u5230\u4E86 <code>Box</code> \u7ED3\u6784\u4F53\uFF0C\u5185\u90E8\u5B9E\u73B0\u4ECD\u4F7F\u7528\u7279\u6B8A\u8BED\u6CD5 <a href="https://doc.rust-lang.org/unstable-book/language-features/box-syntax.html" target="_blank" rel="noopener"><code>box</code></a>\u3002<a href="https://course.rs/advance/smart-pointer/box.html" target="_blank" rel="noopener">\u67D0\u6559\u7A0B</a>\u4F1A\u8BF4\uFF0C\u4F7F\u7528\u4E86 <code>Box::new()</code> \u5C31\u80FD\u628A\u5DE8\u5927\u7684\u4E1C\u897F\u6254\u5230\u5806\u4E0A\u4E86\uFF0C\u4F46\u2026\u2026</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #ABB2BF">#[test]</span></span>
<span class="line"><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">test</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">large</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Box</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">([</span><span style="color: #D19A66">0</span><span style="color: #ABB2BF">; </span><span style="color: #D19A66">1000000</span><span style="color: #ABB2BF">]);</span><span style="color: #7F848E; font-style: italic"> // fatal runtime error: stack overflow</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>
<p>\u5E76\u4E0D\u662F\u8FD9\u6837\u3002Rust \u6CA1\u6709\u50CF C++ \u4E00\u6837\u7684\u590D\u5236\uFF08\u6216\u79FB\u52A8\uFF09\u64E6\u9664\u4FDD\u8BC1\uFF08copy ellision\uFF09\uFF0C\u81EA\u4ECE C++ 17 \u5F00\u59CB\uFF0C\u5305\u62EC\u5B57\u9762\u91CF\u5728\u5185\u7684\u7EAF\u503C\uFF08prvalue\uFF09\u5728\u7528\u6765\u521D\u59CB\u5316\u53D8\u91CF\u65F6\u4FDD\u8BC1\u4E0D\u4F1A\u8C03\u7528\u590D\u5236\u6784\u9020\u51FD\u6570\u2014\u2014\u4F46 Rust \u6839\u672C\u5C31<em>\u6CA1\u6709</em>\u6784\u9020\u51FD\u6570\uFF0C<code>new</code> \u4E0D\u8FC7\u662F\u4E00\u4E2A\u666E\u666E\u901A\u901A\u7684\u5173\u8054\u65B9\u6CD5\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u6CA1\u6709\u4F18\u5316\uFF0C\u5B9E\u53C2\u4F1A\u88AB\u5206\u914D\u5230\u6808\u4E0A\uFF0C\u518D\u79FB\u52A8\u5230\u5806\u4E0A\u3002\u56E0\u6B64\u6808\u8FD8\u662F\u7206\u4E86\u3002\u82E5\u60F3\u8981\u4E00\u53D1\u4E0A\u5806\uFF0C\u4F60\u5F97\u6253\u5F00 Nightly \u7528 <code>box</code> \u8BED\u6CD5\uFF0C<s>\u6216\u8005\u5F00 <code>unsafe</code> \u624B\u52A8\u6254\u8FDB BSS \u6BB5</s>\u3002</p>
<h2 id="maybeuninit" tabindex="-1"><code>MaybeUninit</code></h2>
<p>\u{1F7E2} \u89E3\u51B3</p>
<p>Rust \u7F16\u8BD1\u5668\u6267\u884C\u4F18\u5316\u65F6\u6C38\u8FDC\u5047\u5B9A<strong>\u503C\u662F\u975E\u7A7A\u7684</strong>\u3002\u6240\u4EE5\uFF0C\u7ED3\u6784\u4F53\u548C\u679A\u4E3E\u7684\u5185\u5B58\u5E03\u5C40\u53EF\u80FD\u6309\u7167\u4E0D\u5B58\u5728\u7A7A\u503C\u7684\u60C5\u51B5\u88AB\u4F18\u5316\u3002\u4F46\u5982\u679C\u7528 <code>unsafe</code> \u7B49\u624B\u6BB5\u4EA7\u751F\u4E86\u7A7A\u503C\uFF0C\u5219\u53EF\u80FD\u7531\u4E8E\u7A7A\u503C\u7684\u5185\u5B58\u8868\u793A\u548C\u5408\u6CD5\u503C\u51B2\u7A81\uFF0C\u5BFC\u81F4 UB\u3002\u56E0\u6B64\uFF0CRust 1.36 \u589E\u52A0\u4E86\u4E00\u4E2A\u8054\u5408\u4F53 <code>MaybeUninit</code> \u663E\u5F0F\u5730\u5173\u95ED\u8FD9\u79CD\u5185\u5B58\u4F18\u5316\u3002</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #61AFEF">assert_eq!</span><span style="color: #ABB2BF">(</span><span style="color: #61AFEF">size_of</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">bool</span><span style="color: #ABB2BF">&gt;&gt;(), </span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #61AFEF">assert_eq!</span><span style="color: #ABB2BF">(</span><span style="color: #61AFEF">size_of</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MaybeUninit</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">bool</span><span style="color: #ABB2BF">&gt;&gt;&gt;(), </span><span style="color: #D19A66">2</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span></code></pre>
<h2 id="\u5185\u5B58\u6CC4\u6F0F\u662F\u5B89\u5168\u7684" tabindex="-1">\u201C\u5185\u5B58\u6CC4\u6F0F\u662F\u5B89\u5168\u7684\u201D</h2>
<p>\u26AB \u7279\u6027</p>
<p>Rust \u6700\u521D\u8BA4\u4E3A <code>drop</code> \u89E3\u6784\u53EF\u4EE5\u4FDD\u8BC1\u88AB\u8C03\u7528\uFF0C\u6240\u4EE5 Rust \u7684\u5B89\u5168\u4FDD\u8BC1\u5305\u62EC\u4E0D\u4F1A\u53D1\u751F\u5185\u5B58\u6CC4\u9732\u3002\u4F46\u4ED6\u4EEC\u5FD8\u8BB0\u4E86\u53EF\u4EE5\u7528\u5F15\u7528\u8BA1\u6570\u6307\u9488 <code>Rc</code> \u548C\u5185\u90E8\u53EF\u53D8 <code>RefCell</code> \u62C9\u4E00\u4E2A<em>\u73AF</em>\u3002</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">safe_forget</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #E06C75">data</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">) {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">use</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">std</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">rc</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">Rc</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">use</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">std</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">cell</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">struct</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Leak</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt; {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">cycle</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Rc</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Rc</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Leak</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt;&gt;&gt;&gt;&gt;,</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">data</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">e</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Rc</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Leak</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">cycle</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">None</span><span style="color: #ABB2BF">),</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">data</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">data</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    });</span></span>
<span class="line"><span style="color: #ABB2BF">    *</span><span style="color: #E06C75">e</span><span style="color: #ABB2BF">.cycle.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">() </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Some</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Rc</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">e</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">clone</span><span style="color: #ABB2BF">()));</span><span style="color: #7F848E; font-style: italic"> // Create a cycle</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>
<p>\u8FD9\u4E00\u5728 <a href="https://github.com/rust-lang/rust/issues/24292" target="_blank" rel="noopener">std::thread::JoinGuard (and scoped) are unsound because of reference cycles \xB7 Issue #24292 \xB7 rust-lang/rust (github.com)</a> \u7206\u51FA\u7684\u8BBE\u8BA1\u707E\u96BE\u88AB\u79F0\u4F5C\u201C\u5929\u673A\u6CC4\u9732\u201D\uFF08Leakpocalypse\uFF09\uFF0C\u6700\u7EC8\uFF0C\u5185\u5B58\u6CC4\u9732\u2014\u2014\u4EE5\u53CA\u624B\u52A8\u6CC4\u9732\u5185\u5B58 <code>mem::forget</code> \u90FD\u6210\u4E86\u5B89\u5168\u7684\uFF0C<code>Rc</code> \u589E\u52A0\u4E86\u6EA2\u51FA\u68C0\u67E5\uFF0C\u8FED\u4EE3\u5668\u8C03\u7528 <code>drain</code> \u53EF\u80FD\u5BFC\u81F4\u5185\u5B58\u6CC4\u9732\uFF0C\u540C\u65F6\u4F9D\u8D56 <code>drop</code> \u4FDD\u8BC1\u4F5C\u4E3A\u7EBF\u7A0B\u5B88\u536B\u7684 <code>thread::scoped</code> \u4E5F\u88AB\u79FB\u9664\u3002</p>
<p>\u4E0D\u8FC7\uFF0C\u6700\u7EC8 <a href="https://rust-lang.github.io/rfcs/3151-scoped-threads.html" target="_blank" rel="noopener">RFC #3151</a> \u51B3\u5B9A\u628A <code>crossbeam</code> \u5E93\u4E2D\u4F7F\u7528\u95ED\u5305\u7684\u5E26\u4F5C\u7528\u57DF\u7EBF\u7A0B\u52A0\u56DE\u6807\u51C6\u5E93\u3002</p>
<h2 id="turbofish" tabindex="-1">Turbofish</h2>
<p>\u26AB \u7279\u6027</p>
<p>Rust \u5E0C\u671B\u80FD\u50CF C++ \u4E00\u6837\u5728\u6CDB\u578B\u51FD\u6570\u8C03\u7528\u65F6\u4F7F\u7528 <code>id&lt;T&gt;(...)</code> \u8FD9\u6837\u7684\u6587\u6CD5\u800C\u4E0D\u662F <code>id::&lt;T&gt;()</code>\u3002\u4F46\uFF1A</p>
<pre class="shiki" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75">the</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">guardian</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">stands</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">resolute</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span><span style="color: #98C379">&quot;the&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Turbofish&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;remains&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;undefeated&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_</span><span style="color: #ABB2BF">: (</span><span style="color: #E5C07B">bool</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">bool</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75">the</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">guardian</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">stands</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #E06C75">resolute</span><span style="color: #ABB2BF">));</span></span>
<span class="line"></span></code></pre>
<p>\u6253\u7834\u4E86\u8FD9\u4E00\u5E7B\u60F3\u3002\u4E3A\u8FD9\u4E2A\u8BED\u6CD5\u8D50\u540D Turbofish \u7684 Rust \u56E2\u961F\u6210\u5458 Anna Harren \u540E\u6765\u56E0\u75C5\u53BB\u4E16\uFF0C<a href="https://turbo.fish/" target="_blank" rel="noopener">Turbofish</a> \u8FD9\u4E2A\u8BED\u6CD5\u548C\u540D\u5B57\u4E5F\u6210\u4E3A\u4E86\u5979\u7684\u7EAA\u5FF5\uFF0C\u7559\u5728\u4E86 Rust \u91CC\u3002</p>
<p>\u8FD9\u573A\u8BB2\u5EA7\u5927\u6982\u662F\u6211\u79CD\u8349 Rust \u7684\u8D77\u70B9\uFF0C\u4ECA\u5929\u6709\u5E78\u89C1\u5230\u4E86\u4E3B\u8BB2\u672C\u5C0A\uFF0C\u4E8E\u662F\u51B3\u5B9A\u628A\u8FD9\u7BC7\u5E72\u8D27\u518D\u56DE\u987E\u4E86\u4E00\u904D\u3002\u4E3B\u8BB2\u6700\u540E\u8BF4\uFF1A</p>
<blockquote>
<p>\u867D\u7136 Rust \u6709\u8FD9\u6837\u90A3\u6837\u7684\u95EE\u9898\uFF0C\u4F46\u662F\u548C\u522B\u7684\u8BED\u8A00\u6BD4\u8FD8\u662F\u5F88\u597D\u7684\uFF01</p>
</blockquote>
<p>\u6700\u540E\uFF0C\u6211\u4EEC\u60F3\u8BF4\uFF1A</p>
<blockquote>
<p>C++ \u660E\u5929\u66F4\u597D\u3002</p>
</blockquote>
</div>`})}}};export{A as category,F as date,E as default,C as keywords,i as tags,y as title};
