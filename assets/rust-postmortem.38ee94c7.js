import{_ as l}from"./TheArticle.4c2d4427.js";import{o as p,f as o}from"./app.1304f36a.js";const B="In Rust We Bust",F="2022-04-01T00:00:00.000Z",i="comp",A=["rust","pl"],E={setup(e,{expose:n}){const s={title:"In Rust We Bust",date:"2022-04-01T00:00:00.000Z",category:"comp",tags:["rust","pl"]};return n({frontmatter:s}),(c,t)=>{const a=l;return p(),o(a,{frontmatter:s,inner:`<div><p>Rust \u8BED\u8A00\u7684\u8E29\u5751\u8BB0\u5F55\u3002</p>
<!-- more -->
<p><s>\u5BF9 <code>rustc</code> \u65BD\u7528 <a href="https://harrypotter.fandom.com/wiki/Silencing_Charm" target="_blank" rel="noopener"><code>Silencio</code></a> \u53EF\u4E0D\u80FD\u89E3\u51B3\u95EE\u9898</s>\u3002</p>
<article note>
<h2 id="refcell-\u548C\u4F5C\u7528\u57DF" tabindex="-1"><code>RefCell</code> \u548C\u4F5C\u7528\u57DF</h2>
<p>Rust \u901A\u8FC7 <code>std::cell</code> \u63D0\u4F9B\u7684\u201C\u5185\u90E8\u53EF\u53D8\u6027\u201D\u770B\u8D77\u6765\u5F88\u723D\u2014\u2014\u53EF\u4EE5\u628A\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u6570\u636E\u7684\u4E00\u90E8\u5206\u641E\u6210\u53EF\u53D8\u7684\u3002\u5176\u4E2D\u7684 <code>RefCell</code> \u53EF\u4EE5\u628A<s>\u7F8E\u540D\u8FDC\u626C</s>\u7684\u7F16\u8BD1\u671F <code>borrowck</code> \u641E\u5230\u8FD0\u884C\u671F\u53BB\uFF0C\u5B9E\u73B0\u5F80\u4E0D\u53EF\u53D8\u6570\u636E\u5185\u90E8\u6307\u4E00\u4E2A\u53EF\u5199\u7684\u6307\u9488 <code>RefMut</code> \u7684\u529F\u80FD\u{1F917}\u3002</p>
<p>\u90A3\u4E48\u80FD\u4E0D\u80FD\u628A\u539F\u6570\u636E\u7528 <code>RefCell</code> \u4E00\u5305\uFF0C\u7136\u540E\u76F4\u63A5\u628A <code>&amp;x, &amp;mut x</code> \u66FF\u6362\u6210 <code>x.borrow(), x.borrow_mut()</code> \uFF1F\u7F16\u8BD1\u5668\u4F1A\u7B54\u5E94\uFF0C\u4F46\u4F5C\u7528\u57DF\u95EE\u9898\u53EF\u80FD\u4F1A\u5BFC\u81F4\u8FD0\u884C\u65F6 panic\u{1F643}\u3002</p>
<p>\u8003\u8651\u4E0B\u9762\u4E00\u6BB5\u4EE3\u7801\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #ABB2BF">#[allow(unused)]</span></span>
<span class="line"><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">main</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">mut</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt; </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">None</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">is_none</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">z</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #C678DD">mut</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #24292F">#[allow(unused)]</span></span>
<span class="line"><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">main</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> </span><span style="color: #CF222E">mut</span><span style="color: #24292F"> x</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt; </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">None</span><span style="color: #24292F">;</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> y </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #24292F">x;</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">if</span><span style="color: #24292F"> y</span><span style="color: #CF222E">.</span><span style="color: #8250DF">is_none</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #CF222E">let</span><span style="color: #24292F"> z </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;mut</span><span style="color: #24292F"> x;</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>\u95EE\u9898\u5168\u7136\u65E0\uFF0C\u7F16\u8BD1\u901A\u8FC7\u3002<code>y</code> \u662F\u4E0D\u53EF\u53D8\u5F15\u7528\uFF0C\u4F46\u662F\u5728 <code>if</code> \u7684\u8868\u8FBE\u5F0F\u91CC\u53EA\u7528\u8FC7\u4E00\u6B21\u5C31\u6CA1\u518D\u7528\u8FC7\uFF0C\u56E0\u6B64 <code>z</code> \u53EF\u4EE5\u9AD8\u9AD8\u5174\u5174\u5730\u501F\u51FA\u53EF\u53D8\u5F15\u7528\u3002\u770B\u770B MIR\uFF1A</p>
<pre><code class="language-sh"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #ABB2BF">$ rustc src/main.rs --emit mir</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #24292F">$ rustc src/main.rs --emit mir</span></span>
<span class="line"></span></code></pre></div></code></pre>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #E06C75">scope</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">1</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">debug</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                   // in scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_2</span><span style="color: #ABB2BF">: &amp;</span><span style="color: #E5C07B">std</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">option</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;;</span><span style="color: #7F848E; font-style: italic"> // in scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">scope</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">2</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">debug</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">_2</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">               // in scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_5</span><span style="color: #ABB2BF">: &amp;</span><span style="color: #C678DD">mut</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">std</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">option</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;;</span><span style="color: #7F848E; font-style: italic"> // in scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">scope</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">debug</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">z</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">_5</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">           // in scope 3</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb0</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">discriminant</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">0</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">            // scope 0</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_2</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                        // scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_4</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_2</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                         // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;::</span><span style="color: #61AFEF">is_none</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_4</span><span style="color: #ABB2BF">) -&gt; </span><span style="color: #E06C75">bb1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb1</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">switchInt</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF">) -&gt; [</span><span style="color: #D19A66">false</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb3</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">otherwise</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb2</span><span style="color: #ABB2BF">];</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb2</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_5</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #C678DD">mut</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                    // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">goto</span><span style="color: #ABB2BF"> -&gt; </span><span style="color: #E06C75">bb3</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                     // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb3</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                          // scope 0</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #24292F">scope </span><span style="color: #0550AE">1</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    debug x </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> _1;</span><span style="color: #6E7781">                   // in scope 1</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> _2</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #953800">std</span><span style="color: #CF222E">::</span><span style="color: #953800">option</span><span style="color: #CF222E">::</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;;</span><span style="color: #6E7781"> // in scope 1</span></span>
<span class="line"><span style="color: #24292F">    scope </span><span style="color: #0550AE">2</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">        debug y </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> _2;</span><span style="color: #6E7781">               // in scope 2</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #CF222E">let</span><span style="color: #24292F"> _5</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;mut</span><span style="color: #24292F"> </span><span style="color: #953800">std</span><span style="color: #CF222E">::</span><span style="color: #953800">option</span><span style="color: #CF222E">::</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;;</span><span style="color: #6E7781"> // in scope 2</span></span>
<span class="line"><span style="color: #24292F">        scope </span><span style="color: #0550AE">3</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">            debug z </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> _5;</span><span style="color: #6E7781">           // in scope 3</span></span>
<span class="line"><span style="color: #24292F">        }</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb0</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">discriminant</span><span style="color: #24292F">(_1) </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #0550AE">0</span><span style="color: #24292F">;</span><span style="color: #6E7781">            // scope 0</span></span>
<span class="line"><span style="color: #24292F">    _2 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #24292F">_1;</span><span style="color: #6E7781">                        // scope 1</span></span>
<span class="line"><span style="color: #24292F">    _4 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> _2;</span><span style="color: #6E7781">                         // scope 2</span></span>
<span class="line"><span style="color: #24292F">    _3 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">Option</span><span style="color: #CF222E">::</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;</span><span style="color: #CF222E">::</span><span style="color: #8250DF">is_none</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _4) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> bb1;</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb1</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">switchInt</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _3) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> [</span><span style="color: #0550AE">false</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb3, otherwise</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb2];</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb2</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    _5 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;mut</span><span style="color: #24292F"> _1;</span><span style="color: #6E7781">                    // scope 2</span></span>
<span class="line"><span style="color: #24292F">    goto </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> bb3;</span><span style="color: #6E7781">                     // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb3</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">return</span><span style="color: #24292F">;</span><span style="color: #6E7781">                          // scope 0</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p><code>y(_2)</code> \u53EA\u5728\u57FA\u672C\u5757 <code>0</code> \u51FA\u73B0\u3002\u8DF3\u8F6C\u5230\u57FA\u672C\u5757 <code>2</code>\uFF0C<code>z(_5)</code> \u501F\u53EF\u53D8\u5F15\u7528\u7684\u65F6\u5019\u6CA1\u6709 <code>x</code> \u7684\u4E0D\u53EF\u53D8\u5F15\u7528\u4E86\uFF0C<code>borrowck</code> \u653E\u884C\u3002</p>
<p>\u5982\u679C\u66FF\u6362\u6210 <code>RefCell</code> \u5462\uFF1F</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #ABB2BF">#[allow(unused)]</span></span>
<span class="line"><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">main</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt; </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">None</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">is_none</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">z</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">();</span><span style="color: #7F848E; font-style: italic"> // &lt;- thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #24292F">#[allow(unused)]</span></span>
<span class="line"><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">main</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> x</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt; </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #8250DF">new</span><span style="color: #24292F">(</span><span style="color: #953800">None</span><span style="color: #24292F">);</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> y </span><span style="color: #CF222E">=</span><span style="color: #24292F"> x</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow</span><span style="color: #24292F">();</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">if</span><span style="color: #24292F"> y</span><span style="color: #CF222E">.</span><span style="color: #8250DF">is_none</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #CF222E">let</span><span style="color: #24292F"> z </span><span style="color: #CF222E">=</span><span style="color: #24292F"> x</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">();</span><span style="color: #6E7781"> // &lt;- thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>panic \u4E86\u3002\u4E3A\u4EC0\u4E48\u5462\uFF1F</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #E06C75">scope</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">1</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">debug</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                   // in scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">std</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">cell</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">Ref</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">std</span><span style="color: #ABB2BF">::</span><span style="color: #E06C75">option</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt;;</span><span style="color: #7F848E; font-style: italic"> // in scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">scope</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">2</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">debug</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">               // in scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_9</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">std</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">cell</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">RefMut</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">std</span><span style="color: #ABB2BF">::</span><span style="color: #E06C75">option</span><span style="color: #ABB2BF">::</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt;;</span><span style="color: #7F848E; font-style: italic"> // in scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">scope</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">debug</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">z</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">_9</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">           // in scope 3</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb0</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">discriminant</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">_2</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">0</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">            // scope 0</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt;::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_2</span><span style="color: #ABB2BF">) -&gt; </span><span style="color: #E06C75">bb1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic"> // scope 0</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb1</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_4</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                        // scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt;::</span><span style="color: #61AFEF">borrow</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_4</span><span style="color: #ABB2BF">) -&gt; </span><span style="color: #E06C75">bb2</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic"> // scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb2</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_8</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                        // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_7</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &lt;</span><span style="color: #E5C07B">Ref</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt; </span><span style="color: #C678DD">as</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Deref</span><span style="color: #ABB2BF">&gt;::</span><span style="color: #61AFEF">deref</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_8</span><span style="color: #ABB2BF">) -&gt; [</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb3</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">unwind</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb9</span><span style="color: #ABB2BF">];</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb3</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_6</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_7</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                         // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_5</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;::</span><span style="color: #61AFEF">is_none</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_6</span><span style="color: #ABB2BF">) -&gt; [</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb4</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">unwind</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb9</span><span style="color: #ABB2BF">];</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb4</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">switchInt</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_5</span><span style="color: #ABB2BF">) -&gt; [</span><span style="color: #D19A66">false</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb7</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">otherwise</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb5</span><span style="color: #ABB2BF">];</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb5</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_10</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #E06C75">_1</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                       // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">_9</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt;::</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">move</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">_10</span><span style="color: #ABB2BF">) -&gt; [</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb6</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">unwind</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb9</span><span style="color: #ABB2BF">];</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #7F848E; font-style: italic">/* z \u5728\u8FD9\u91CC\u6790\u6784 */</span></span>
<span class="line"><span style="color: #E06C75">bb6</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">drop</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">_9</span><span style="color: #ABB2BF">) -&gt; [</span><span style="color: #C678DD">return</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb7</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">unwind</span><span style="color: #ABB2BF">: </span><span style="color: #E06C75">bb9</span><span style="color: #ABB2BF">];</span><span style="color: #7F848E; font-style: italic"> // scope 2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #7F848E; font-style: italic">/* y \u5728\u8FD9\u91CC\u624D\u6790\u6784 */</span></span>
<span class="line"><span style="color: #E06C75">bb7</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">drop</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">_3</span><span style="color: #ABB2BF">) -&gt; </span><span style="color: #E06C75">bb8</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                 // scope 1</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E06C75">bb8</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic">                          // scope 0</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #7F848E; font-style: italic">// ...</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #24292F">scope </span><span style="color: #0550AE">1</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    debug x </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> _1;</span><span style="color: #6E7781">                   // in scope 1</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> _3</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">std</span><span style="color: #CF222E">::</span><span style="color: #953800">cell</span><span style="color: #CF222E">::</span><span style="color: #953800">Ref</span><span style="color: #24292F">&lt;std</span><span style="color: #CF222E">::</span><span style="color: #24292F">option</span><span style="color: #CF222E">::</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt;;</span><span style="color: #6E7781"> // in scope 1</span></span>
<span class="line"><span style="color: #24292F">    scope </span><span style="color: #0550AE">2</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">        debug y </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> _3;</span><span style="color: #6E7781">               // in scope 2</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #CF222E">let</span><span style="color: #24292F"> _9</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">std</span><span style="color: #CF222E">::</span><span style="color: #953800">cell</span><span style="color: #CF222E">::</span><span style="color: #953800">RefMut</span><span style="color: #24292F">&lt;std</span><span style="color: #CF222E">::</span><span style="color: #24292F">option</span><span style="color: #CF222E">::</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt;;</span><span style="color: #6E7781"> // in scope 2</span></span>
<span class="line"><span style="color: #24292F">        scope </span><span style="color: #0550AE">3</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">            debug z </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> _9;</span><span style="color: #6E7781">           // in scope 3</span></span>
<span class="line"><span style="color: #24292F">        }</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb0</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">discriminant</span><span style="color: #24292F">(_2) </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #0550AE">0</span><span style="color: #24292F">;</span><span style="color: #6E7781">            // scope 0</span></span>
<span class="line"><span style="color: #24292F">    _1 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt;</span><span style="color: #CF222E">::</span><span style="color: #8250DF">new</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _2) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> bb1;</span><span style="color: #6E7781"> // scope 0</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb1</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    _4 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #24292F">_1;</span><span style="color: #6E7781">                        // scope 1</span></span>
<span class="line"><span style="color: #24292F">    _3 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt;</span><span style="color: #CF222E">::</span><span style="color: #8250DF">borrow</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _4) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> bb2;</span><span style="color: #6E7781"> // scope 1</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb2</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    _8 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #24292F">_3;</span><span style="color: #6E7781">                        // scope 2</span></span>
<span class="line"><span style="color: #24292F">    _7 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> &lt;</span><span style="color: #953800">Ref</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt; </span><span style="color: #CF222E">as</span><span style="color: #24292F"> </span><span style="color: #953800">Deref</span><span style="color: #24292F">&gt;</span><span style="color: #CF222E">::</span><span style="color: #8250DF">deref</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _8) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> [</span><span style="color: #CF222E">return:</span><span style="color: #24292F"> bb3, unwind</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb9];</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb3</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    _6 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> _7;</span><span style="color: #6E7781">                         // scope 2</span></span>
<span class="line"><span style="color: #24292F">    _5 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">Option</span><span style="color: #CF222E">::</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;</span><span style="color: #CF222E">::</span><span style="color: #8250DF">is_none</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _6) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> [</span><span style="color: #CF222E">return:</span><span style="color: #24292F"> bb4, unwind</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb9];</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb4</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">switchInt</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _5) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> [</span><span style="color: #0550AE">false</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb7, otherwise</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb5];</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb5</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    _10 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #24292F">_1;</span><span style="color: #6E7781">                       // scope 2</span></span>
<span class="line"><span style="color: #24292F">    _9 </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt;</span><span style="color: #CF222E">::</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">(</span><span style="color: #CF222E">move</span><span style="color: #24292F"> _10) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> [</span><span style="color: #CF222E">return:</span><span style="color: #24292F"> bb6, unwind</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb9];</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6E7781">/* z \u5728\u8FD9\u91CC\u6790\u6784 */</span></span>
<span class="line"><span style="color: #24292F">bb6</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">drop</span><span style="color: #24292F">(_9) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> [</span><span style="color: #CF222E">return:</span><span style="color: #24292F"> bb7, unwind</span><span style="color: #CF222E">:</span><span style="color: #24292F"> bb9];</span><span style="color: #6E7781"> // scope 2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6E7781">/* y \u5728\u8FD9\u91CC\u624D\u6790\u6784 */</span></span>
<span class="line"><span style="color: #24292F">bb7</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">drop</span><span style="color: #24292F">(_3) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> bb8;</span><span style="color: #6E7781">                 // scope 1</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">bb8</span><span style="color: #CF222E">:</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">return</span><span style="color: #24292F">;</span><span style="color: #6E7781">                          // scope 0</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6E7781">// ...</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>\u4F5C\u7528\u57DF\u662F\u4E00\u6837\u7684\u554A\uFF1F\u4F46\u662F\u6CE8\u610F\uFF0C<code>y(_3)</code> \u4ECE <code>RefCell</code> \u501F\u51FA\u7684 <code>Ref</code> \u662F\u667A\u80FD\u6307\u9488\uFF0C\u9700\u8981\u6790\u6784\u8FD9\u4E00\u6B65\uFF0C\u5B83\u4E00\u76F4\u4FDD\u6301\u5230 <code>if</code> \u4F5C\u7528\u57DF\u7684\u5C3E\u90E8\uFF0C\u4E5F\u5C31\u662F\u57FA\u672C\u5757 <code>7</code> \u624D\u6790\u6784\uFF01\u5728\u6B64\u4E4B\u524D\u57FA\u672C\u5757 <code>5</code> \u8981\u6C42\u501F\u51FA <code>RefMut</code>\uFF0C\u4E8E\u662F\u5F53\u573A panic\u{1F631}\u3002</p>
<p>\u600E\u4E48\u89E3\u51B3\u5462\uFF1F\u624B\u52A8 <code>drop()</code>\u{1F92A}\uFF01\u4E8B\u5B9E\u4E0A\uFF0C<code>mem::drop</code> \u7684\u6587\u6863\u5DF2\u7ECF\u7ED9\u51FA\u4E86\u7C7B\u4F3C\u7684<a href="https://doc.rust-lang.org/std/mem/fn.drop.html#examples" target="_blank" rel="noopener">\u4F8B\u5B50</a>\u3002</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #ABB2BF">#[allow(unused)]</span></span>
<span class="line"><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">main</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt; </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">None</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> { </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">b</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">y</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">is_none</span><span style="color: #ABB2BF">(); </span><span style="color: #61AFEF">drop</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">y</span><span style="color: #ABB2BF">); </span><span style="color: #E06C75">b</span><span style="color: #ABB2BF"> } {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">z</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #24292F">#[allow(unused)]</span></span>
<span class="line"><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">main</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> x</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt; </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #8250DF">new</span><span style="color: #24292F">(</span><span style="color: #953800">None</span><span style="color: #24292F">);</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> y </span><span style="color: #CF222E">=</span><span style="color: #24292F"> x</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow</span><span style="color: #24292F">();</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">if</span><span style="color: #24292F"> { </span><span style="color: #CF222E">let</span><span style="color: #24292F"> b </span><span style="color: #CF222E">=</span><span style="color: #24292F"> y</span><span style="color: #CF222E">.</span><span style="color: #8250DF">is_none</span><span style="color: #24292F">(); </span><span style="color: #8250DF">drop</span><span style="color: #24292F">(y); b } {</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #CF222E">let</span><span style="color: #24292F"> z </span><span style="color: #CF222E">=</span><span style="color: #24292F"> x</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">();</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p><strong>\u66F4\u65B0</strong>\uFF1A\u628A\u5F15\u7528\u4FDD\u5B58\u5728\u4E34\u65F6\u53D8\u91CF\u91CC\u5176\u5B9E\u4E0D\u592A Rust \u98CE\u5473\uFF0C\u7279\u522B\u662F\u4FDD\u5B58 <code>RefCell</code> \u6216\u8005 <code>Mutex</code> \u7684\u5B88\u536B\uFF08guard\uFF09\u3002\u6240\u4EE5\uFF0C\u4E0D\u63D0\u53D6\u4E34\u65F6\u4E2D\u95F4\u53D8\u91CF\u53CD\u800C\u662F\u66F4\u7B26\u5408 Rust \u7684\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Option</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">i32</span><span style="color: #ABB2BF">&gt;&gt; </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">None</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">is_none</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">z</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">();</span><span style="color: #7F848E; font-style: italic"> // Fine!</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> x</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #24292F">&lt;</span><span style="color: #953800">Option</span><span style="color: #24292F">&lt;</span><span style="color: #953800">i32</span><span style="color: #24292F">&gt;&gt; </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #8250DF">new</span><span style="color: #24292F">(</span><span style="color: #953800">None</span><span style="color: #24292F">);</span></span>
<span class="line"><span style="color: #CF222E">if</span><span style="color: #24292F"> x</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">is_none</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">  </span><span style="color: #CF222E">let</span><span style="color: #24292F"> z </span><span style="color: #CF222E">=</span><span style="color: #24292F"> x</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">();</span><span style="color: #6E7781"> // Fine!</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
</article>
<hr class="talk-separator" />
<article note>
<h2 id="\u521D\u59CB\u5316\u5668\u4E5F\u662F\u8868\u8FBE\u5F0F" tabindex="-1">\u521D\u59CB\u5316\u5668\u4E5F\u662F\u8868\u8FBE\u5F0F</h2>
<p><s>\u8FD9\u4E0D\u662F\u663E\u7136\u7684\u5417</s>\uFF1F</p>
<p>\u5143\u7EC4\uFF08tuple\uFF09\u548C\u6570\u7EC4\uFF08array\uFF09\u90FD\u662F Rust \u7684\u57FA\u672C\u7C7B\u578B\uFF08primitive type\uFF09\u3002\u5143\u7EC4\u7684\u521D\u59CB\u5316\u5668\u7528 <code>()</code>\uFF0C\u6570\u7EC4\u7528 <code>[]</code>\uFF0C\u5206\u9694\u7B26\u662F <code>,</code>\u3002\u867D\u7136\u521D\u59CB\u5316\u5668<em>\u663E\u7136</em>\u662F\u8868\u8FBE\u5F0F\uFF0C\u4F46\u6709\u65F6\u5019\u9017\u53F7\u4E00\u52A0\uFF0C\u5C31\u96BE\u514D\u60F3\u8FD9\u6837\u5199\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #61AFEF">vec!</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">, </span><span style="color: #D19A66">2</span><span style="color: #ABB2BF">, </span><span style="color: #D19A66">3</span><span style="color: #ABB2BF">]);</span></span>
<span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">values</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">max</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">cloned</span><span style="color: #ABB2BF">(),</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">min</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">cloned</span><span style="color: #ABB2BF">(), </span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #7F848E; font-style: italic">/*   ^^^^^^^^^^ </span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">       thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  */</span></span>
<span class="line"><span style="color: #ABB2BF">);</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> cell </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #8250DF">new</span><span style="color: #24292F">(</span><span style="color: #8250DF">vec!</span><span style="color: #24292F">[</span><span style="color: #0550AE">1</span><span style="color: #24292F">, </span><span style="color: #0550AE">2</span><span style="color: #24292F">, </span><span style="color: #0550AE">3</span><span style="color: #24292F">]);</span></span>
<span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> values </span><span style="color: #CF222E">=</span><span style="color: #24292F"> (</span></span>
<span class="line"><span style="color: #24292F">  cell</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">max</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">cloned</span><span style="color: #24292F">(),</span></span>
<span class="line"><span style="color: #24292F">  cell</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">min</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">cloned</span><span style="color: #24292F">(), </span></span>
<span class="line"><span style="color: #24292F">  </span><span style="color: #6E7781">/*   ^^^^^^^^^^ </span></span>
<span class="line"><span style="color: #6E7781">       thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;</span></span>
<span class="line"><span style="color: #6E7781">  */</span></span>
<span class="line"><span style="color: #24292F">);</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>\u4E8E\u662F\u5C31\u5403\u4E86\u4E00\u4E2A panic\u3002\u5C3D\u7BA1\u7528\u9017\u53F7\u9694\u5F00\u4E86\uFF0C\u4F46<strong>\u8868\u8FBE\u5F0F\u91CC\u9762\u7684\u4E34\u65F6\u53D8\u91CF\u4ECD\u7136\u4F1A\u751F\u5B58\u5230\u8868\u8FBE\u5F0F\u7684\u7ED3\u675F</strong>\uFF0C\u51FD\u6570\u8C03\u7528\u7684\u5B9E\u53C2\u540C\u7406\u3002\u8003\u8651\u4E0B\u9762\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u5C31\u77E5\u9053\u4E3A\u4EC0\u4E48\u8981\u8FD9\u6837\u4E86\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">mut</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">i</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">42</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">tuple</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (&amp;</span><span style="color: #E06C75">i</span><span style="color: #ABB2BF">, &amp;</span><span style="color: #C678DD">mut</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">i</span><span style="color: #ABB2BF">);</span><span style="color: #7F848E; font-style: italic"> // \u663E\u7136\u4E0D\u884C\u5427</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> </span><span style="color: #CF222E">mut</span><span style="color: #24292F"> i </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #0550AE">42</span><span style="color: #24292F">;</span></span>
<span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> tuple </span><span style="color: #CF222E">=</span><span style="color: #24292F"> (</span><span style="color: #CF222E">&amp;</span><span style="color: #24292F">i, </span><span style="color: #CF222E">&amp;mut</span><span style="color: #24292F"> i);</span><span style="color: #6E7781"> // \u663E\u7136\u4E0D\u884C\u5427</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p><s>\u5927\u5BB6\u6700\u559C\u6B22\u7684</s> C++ \u4E5F\u662F\u4E00\u6837\u7684\uFF1A</p>
<pre><code class="language-cpp"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">#include</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&lt;iostream&gt;</span></span>
<span class="line"><span style="color: #C678DD">#include</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&lt;tuple&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">struct</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">A</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">int</span><span style="color: #ABB2BF"> v;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">A</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">int</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75; font-style: italic">i</span><span style="color: #ABB2BF">): </span><span style="color: #61AFEF">v</span><span style="color: #ABB2BF">(i) {</span></span>
<span class="line"><span style="color: #ABB2BF">        std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;A(&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> i </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;)&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> std::endl;</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">~A</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">        std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;~A(&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> v </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;)&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> std::endl;</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">int</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">main</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    std::tuple</span><span style="color: #C678DD">&lt;</span><span style="color: #ABB2BF">A, A</span><span style="color: #C678DD">&gt;</span><span style="color: #ABB2BF"> t </span><span style="color: #C678DD">=</span><span style="color: #ABB2BF"> {</span><span style="color: #61AFEF">A</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">), </span><span style="color: #61AFEF">A</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">2</span><span style="color: #ABB2BF">)};</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  	/*</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  	                      A(1)</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  	                            A(2)</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  	                           ~A(2)</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  	                     ~A(1)</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">  	*/</span></span>
<span class="line"><span style="color: #ABB2BF">    std::cout </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;---&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">&lt;&lt;</span><span style="color: #ABB2BF"> std::endl;</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #CF222E">#include</span><span style="color: #24292F"> </span><span style="color: #0A3069">&lt;iostream&gt;</span></span>
<span class="line"><span style="color: #CF222E">#include</span><span style="color: #24292F"> </span><span style="color: #0A3069">&lt;tuple&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">struct</span><span style="color: #24292F"> </span><span style="color: #953800">A</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">int</span><span style="color: #24292F"> v;</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">A</span><span style="color: #24292F">(</span><span style="color: #CF222E">int</span><span style="color: #24292F"> </span><span style="color: #953800">i</span><span style="color: #24292F">): </span><span style="color: #8250DF">v</span><span style="color: #24292F">(i) {</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #953800">std</span><span style="color: #24292F">::cout </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #0A3069">&quot;A(&quot;</span><span style="color: #24292F"> </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> i </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #0A3069">&quot;)&quot;</span><span style="color: #24292F"> </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #953800">std</span><span style="color: #24292F">::endl;</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #8250DF">~A</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #953800">std</span><span style="color: #24292F">::cout </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #0A3069">&quot;~A(&quot;</span><span style="color: #24292F"> </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> v </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #0A3069">&quot;)&quot;</span><span style="color: #24292F"> </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #953800">std</span><span style="color: #24292F">::endl;</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">int</span><span style="color: #24292F"> </span><span style="color: #8250DF">main</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #953800">std</span><span style="color: #24292F">::tuple</span><span style="color: #CF222E">&lt;</span><span style="color: #24292F">A, A</span><span style="color: #CF222E">&gt;</span><span style="color: #24292F"> t </span><span style="color: #CF222E">=</span><span style="color: #24292F"> {</span><span style="color: #8250DF">A</span><span style="color: #24292F">(</span><span style="color: #0550AE">1</span><span style="color: #24292F">), </span><span style="color: #8250DF">A</span><span style="color: #24292F">(</span><span style="color: #0550AE">2</span><span style="color: #24292F">)};</span></span>
<span class="line"><span style="color: #6E7781">  	/*</span></span>
<span class="line"><span style="color: #6E7781">  	                      A(1)</span></span>
<span class="line"><span style="color: #6E7781">  	                            A(2)</span></span>
<span class="line"><span style="color: #6E7781">  	                           ~A(2)</span></span>
<span class="line"><span style="color: #6E7781">  	                     ~A(1)</span></span>
<span class="line"><span style="color: #6E7781">  	*/</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #953800">std</span><span style="color: #24292F">::cout </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #0A3069">&quot;---&quot;</span><span style="color: #24292F"> </span><span style="color: #CF222E">&lt;&lt;</span><span style="color: #24292F"> </span><span style="color: #953800">std</span><span style="color: #24292F">::endl;</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>\u6240\u4EE5\u53EA\u597D\u4E56\u4E56\u5730\u52A0\u4E00\u4E2A\u4E2D\u95F4\u53D8\u91CF\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">r</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">values</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75">r</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">max</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">cloned</span><span style="color: #ABB2BF">(), </span><span style="color: #E06C75">r</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">min</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">cloned</span><span style="color: #ABB2BF">());</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> r </span><span style="color: #CF222E">=</span><span style="color: #24292F"> cell</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">();</span></span>
<span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> values </span><span style="color: #CF222E">=</span><span style="color: #24292F"> (r</span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">max</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">cloned</span><span style="color: #24292F">(), r</span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">min</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">cloned</span><span style="color: #24292F">());</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>\u6216\u8005\uFF0C<s>\u5199\u4E00\u4E2A\u5B8F</s>\uFF08<code>rust-analyzer</code>\uFF1A\u793C\u8C8C\u4F60\u5417\u{1F92C}\uFF1F\uFF09\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #61AFEF">macro_rules!</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">with</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    ($</span><span style="color: #E06C75">i</span><span style="color: #ABB2BF">:</span><span style="color: #E06C75">ident</span></span>
<span class="line"><span style="color: #ABB2BF">      .$($</span><span style="color: #E06C75">h</span><span style="color: #ABB2BF">:</span><span style="color: #E06C75">ident</span><span style="color: #ABB2BF"> ( $($</span><span style="color: #E06C75">e0</span><span style="color: #ABB2BF">:</span><span style="color: #E06C75">expr</span><span style="color: #ABB2BF">),*) ).*</span><span style="color: #7F848E; font-style: italic"> // \u8981\u4E22\u5F03\u7684\u53EF\u53D8\u5F15\u7528</span></span>
<span class="line"><span style="color: #ABB2BF">      #</span></span>
<span class="line"><span style="color: #ABB2BF">      .$($</span><span style="color: #E06C75">f</span><span style="color: #ABB2BF">:</span><span style="color: #E06C75">ident</span><span style="color: #ABB2BF"> ( $($</span><span style="color: #E06C75">e1</span><span style="color: #ABB2BF">:</span><span style="color: #E06C75">expr</span><span style="color: #ABB2BF">),*) ).*</span><span style="color: #7F848E; font-style: italic"> // \u8C03\u7528\u94FE</span></span>
<span class="line"><span style="color: #ABB2BF">      $(: $</span><span style="color: #E06C75">ty</span><span style="color: #ABB2BF">:</span><span style="color: #E06C75">ty</span><span style="color: #ABB2BF">)?</span><span style="color: #7F848E; font-style: italic"> // \u53EF\u9009\u7684\u7C7B\u578B\u6807\u6CE8</span></span>
<span class="line"><span style="color: #ABB2BF">    ) =&gt; {</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">h</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> $</span><span style="color: #E06C75">i</span><span style="color: #ABB2BF">$(.$</span><span style="color: #E06C75">h</span><span style="color: #ABB2BF">($($</span><span style="color: #E06C75">e0</span><span style="color: #ABB2BF">),*))*;</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">v</span><span style="color: #ABB2BF">$(: $</span><span style="color: #E06C75">ty</span><span style="color: #ABB2BF">)? </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">h</span><span style="color: #ABB2BF">$(.$</span><span style="color: #E06C75">f</span><span style="color: #ABB2BF">($($</span><span style="color: #E06C75">e1</span><span style="color: #ABB2BF">),*))*;</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #61AFEF">drop</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">h</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">v</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"><span style="color: #ABB2BF">    };</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RefCell</span><span style="color: #ABB2BF">::</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #61AFEF">vec!</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">, </span><span style="color: #D19A66">2</span><span style="color: #ABB2BF">, </span><span style="color: #D19A66">3</span><span style="color: #ABB2BF">]);</span></span>
<span class="line"><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">values</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #61AFEF">with!</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">cell</span></span>
<span class="line"><span style="color: #ABB2BF">    .</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    #</span><span style="color: #7F848E; font-style: italic"> // \u4EE5\u4E0A\u662F\u53EF\u53D8\u7684\u5F15\u7528\uFF0C\u4EE5\u4E0B\u662F\u5F15\u7528\u4E0A\u7684\u8C03\u7528\u94FE</span></span>
<span class="line"><span style="color: #ABB2BF">    .</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    .</span><span style="color: #61AFEF">map</span><span style="color: #ABB2BF">(</span><span style="color: #56B6C2">|</span><span style="color: #E06C75">a</span><span style="color: #56B6C2">|</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">a</span><span style="color: #ABB2BF"> + </span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">    .</span><span style="color: #61AFEF">sum</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    :</span><span style="color: #E5C07B">i32</span><span style="color: #7F848E; font-style: italic"> // \u53EF\u9009\u7684\u7C7B\u578B\u6807\u6CE8</span></span>
<span class="line"><span style="color: #ABB2BF">  ),</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #61AFEF">with!</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">()#.</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">max</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">cloned</span><span style="color: #ABB2BF">()),</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #61AFEF">with!</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">cell</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">borrow_mut</span><span style="color: #ABB2BF">()#.</span><span style="color: #61AFEF">iter</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">min</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">cloned</span><span style="color: #ABB2BF">()),</span></span>
<span class="line"><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #61AFEF">println!</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;{:?}&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">values</span><span style="color: #ABB2BF">);</span><span style="color: #7F848E; font-style: italic"> // -&gt; (9, Some(3), Some(1))</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #8250DF">macro_rules!</span><span style="color: #24292F"> </span><span style="color: #8250DF">with</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    (</span><span style="color: #CF222E">$</span><span style="color: #24292F">i</span><span style="color: #CF222E">:</span><span style="color: #24292F">ident</span></span>
<span class="line"><span style="color: #24292F">      </span><span style="color: #CF222E">.$</span><span style="color: #24292F">(</span><span style="color: #CF222E">$</span><span style="color: #24292F">h</span><span style="color: #CF222E">:</span><span style="color: #24292F">ident ( </span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">$</span><span style="color: #24292F">e0</span><span style="color: #CF222E">:</span><span style="color: #24292F">expr),</span><span style="color: #CF222E">*</span><span style="color: #24292F">) )</span><span style="color: #CF222E">.*</span><span style="color: #6E7781"> // \u8981\u4E22\u5F03\u7684\u53EF\u53D8\u5F15\u7528</span></span>
<span class="line"><span style="color: #24292F">      #</span></span>
<span class="line"><span style="color: #24292F">      </span><span style="color: #CF222E">.$</span><span style="color: #24292F">(</span><span style="color: #CF222E">$</span><span style="color: #24292F">f</span><span style="color: #CF222E">:</span><span style="color: #24292F">ident ( </span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">$</span><span style="color: #24292F">e1</span><span style="color: #CF222E">:</span><span style="color: #24292F">expr),</span><span style="color: #CF222E">*</span><span style="color: #24292F">) )</span><span style="color: #CF222E">.*</span><span style="color: #6E7781"> // \u8C03\u7528\u94FE</span></span>
<span class="line"><span style="color: #24292F">      </span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #CF222E">$</span><span style="color: #24292F">ty</span><span style="color: #CF222E">:</span><span style="color: #24292F">ty)</span><span style="color: #CF222E">?</span><span style="color: #6E7781"> // \u53EF\u9009\u7684\u7C7B\u578B\u6807\u6CE8</span></span>
<span class="line"><span style="color: #24292F">    ) </span><span style="color: #CF222E">=&gt;</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">        {</span></span>
<span class="line"><span style="color: #24292F">            </span><span style="color: #CF222E">let</span><span style="color: #24292F"> h </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #CF222E">$</span><span style="color: #24292F">i</span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">.$</span><span style="color: #24292F">h(</span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">$</span><span style="color: #24292F">e0),</span><span style="color: #CF222E">*</span><span style="color: #24292F">))</span><span style="color: #CF222E">*</span><span style="color: #24292F">;</span></span>
<span class="line"><span style="color: #24292F">            </span><span style="color: #CF222E">let</span><span style="color: #24292F"> v</span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #CF222E">$</span><span style="color: #24292F">ty)</span><span style="color: #CF222E">?</span><span style="color: #24292F"> </span><span style="color: #CF222E">=</span><span style="color: #24292F"> h</span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">.$</span><span style="color: #24292F">f(</span><span style="color: #CF222E">$</span><span style="color: #24292F">(</span><span style="color: #CF222E">$</span><span style="color: #24292F">e1),</span><span style="color: #CF222E">*</span><span style="color: #24292F">))</span><span style="color: #CF222E">*</span><span style="color: #24292F">;</span></span>
<span class="line"><span style="color: #24292F">            </span><span style="color: #8250DF">drop</span><span style="color: #24292F">(h);</span></span>
<span class="line"><span style="color: #24292F">            v</span></span>
<span class="line"><span style="color: #24292F">        }</span></span>
<span class="line"><span style="color: #24292F">    };</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> cell </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">RefCell</span><span style="color: #CF222E">::</span><span style="color: #8250DF">new</span><span style="color: #24292F">(</span><span style="color: #8250DF">vec!</span><span style="color: #24292F">[</span><span style="color: #0550AE">1</span><span style="color: #24292F">, </span><span style="color: #0550AE">2</span><span style="color: #24292F">, </span><span style="color: #0550AE">3</span><span style="color: #24292F">]);</span></span>
<span class="line"><span style="color: #CF222E">let</span><span style="color: #24292F"> values </span><span style="color: #CF222E">=</span><span style="color: #24292F"> (</span></span>
<span class="line"><span style="color: #24292F">  </span><span style="color: #8250DF">with!</span><span style="color: #24292F">(cell</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">()</span></span>
<span class="line"><span style="color: #24292F">    #</span><span style="color: #6E7781"> // \u4EE5\u4E0A\u662F\u53EF\u53D8\u7684\u5F15\u7528\uFF0C\u4EE5\u4E0B\u662F\u5F15\u7528\u4E0A\u7684\u8C03\u7528\u94FE</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">.</span><span style="color: #8250DF">map</span><span style="color: #24292F">(</span><span style="color: #CF222E">|</span><span style="color: #24292F">a</span><span style="color: #CF222E">|</span><span style="color: #24292F"> a </span><span style="color: #CF222E">+</span><span style="color: #24292F"> </span><span style="color: #0550AE">1</span><span style="color: #24292F">)</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">.</span><span style="color: #8250DF">sum</span><span style="color: #24292F">()</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">:</span><span style="color: #953800">i32</span><span style="color: #6E7781"> // \u53EF\u9009\u7684\u7C7B\u578B\u6807\u6CE8</span></span>
<span class="line"><span style="color: #24292F">  ),</span></span>
<span class="line"><span style="color: #24292F">  </span><span style="color: #8250DF">with!</span><span style="color: #24292F">(cell</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">()#</span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">max</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">cloned</span><span style="color: #24292F">()),</span></span>
<span class="line"><span style="color: #24292F">  </span><span style="color: #8250DF">with!</span><span style="color: #24292F">(cell</span><span style="color: #CF222E">.</span><span style="color: #8250DF">borrow_mut</span><span style="color: #24292F">()#</span><span style="color: #CF222E">.</span><span style="color: #8250DF">iter</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">min</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">cloned</span><span style="color: #24292F">()),</span></span>
<span class="line"><span style="color: #24292F">);</span></span>
<span class="line"><span style="color: #8250DF">println!</span><span style="color: #24292F">(</span><span style="color: #0A3069">&quot;{:?}&quot;</span><span style="color: #24292F">, values);</span><span style="color: #6E7781"> // -&gt; (9, Some(3), Some(1))</span></span>
<span class="line"></span></code></pre></div></code></pre>
</article>
<hr class="talk-separator" />
<article note>
<h2 id="\u8FD4\u56DE\u503C\u4F4D\u7F6E\u7684-impl-trait" tabindex="-1">\u8FD4\u56DE\u503C\u4F4D\u7F6E\u7684 <code>impl Trait</code></h2>
<p>\u6765\u81EA <a href="https://this-week-in-rust.org/blog/2022/05/18/this-week-in-rust-443/" target="_blank" rel="noopener">This Week in Rust 443</a> \u63A8\u8350\u6587\u7AE0 <a href="https://davidkoloski.me/blog/a-new-impl-trait-1/#citation-2" target="_blank" rel="noopener"><em>A new impl Trait 1/4</em></a>\u3002</p>
<p><s>\u4F17\u6240\u5468\u77E5</s>\uFF0C<code>impl Trait</code> \u5728\u5F62\u53C2\u4F4D\u7F6E\u548C\u8FD4\u56DE\u503C\u4F4D\u7F6E\u662F\u5B8C\u5168\u4E0D\u540C\u7684\u8BED\u6CD5\u7CD6\u{1F92F}\u3002\u5728\u8FD4\u56DE\u503C\u4F4D\u7F6E\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u5B83\u8868\u793A\u4E00\u4E2A\u201C<strong>\u9759\u6001\u7684\u62BD\u8C61\u7C7B\u578B\u{1F418}</strong>\u201D\uFF0C\u5373\uFF1A</p>
<ul>
<li>\u7F16\u8BD1\u5668\u5728<strong>\u7F16\u8BD1\u671F</strong>\u4E3A\u5B83\u786E\u5B9A\u4E86\u4E00\u4E2A\u5177\u4F53\u7C7B\u578B\uFF0C\u6240\u4EE5<em>\u4ECD\u7136\u662F\u9759\u6001\u6D3E\u53D1</em>\u3002</li>
<li>\u4F46\u5B83\u662F\u4E00\u4E2A<strong>\u62BD\u8C61\u7C7B\u578B</strong>\uFF08<a href="https://en.wikipedia.org/wiki/Abstract_type" target="_blank" rel="noopener">abstract type</a>\uFF09\u3002\u5728\u8BED\u4E49\u4E0A\uFF0C\u5B83<em>\u5B9E\u73B0\u4E14\u4EC5\u5B9E\u73B0</em>\u4E86 <code>Trait</code> \u66B4\u9732\u51FA\u6765\u7684\u63A5\u53E3\u3002</li>
</ul>
<p><code>impl Trait</code> \u4E00\u822C\u7528\u4E8E\u5E26\u6709\u5173\u8054\u7C7B\u578B\uFF08associate type\uFF09\u7684\u7279\u5F81\uFF0C\u6BD4\u5982 <code>Iterator</code> \u6216\u662F <code>Future</code>\uFF0C\u5B83\u4EEC\u7684\u5173\u8054\u7C7B\u578B\u53EF\u80FD\u53D8\u5F97\u975E\u5E38\u590D\u6742\uFF0C\u6240\u4EE5\u7528 <code>impl</code> \u62BD\u8C61\u5B83\u7701\u7565\u6389\u8FD9\u4E9B\u7C7B\u578B\u4F1A\u6BD4\u8F83\u65B9\u4FBF\u3002\u9690\u5F0F\u7684\u63A8\u65AD\u56FA\u7136\u65B9\u4FBF\uFF0C\u4F46\u6700\u7EC8\u63A8\u65AD\u51FA\u4E86\u4EC0\u4E48\u7C7B\u578B\uFF1F\u8FD9\u91CC\u9762\u5C31\u6709\u53EF\u80FD\u2026\u2026\u{1F608}</p>
<p>\u6BD4\u5982\u535A\u6587\u4E2D\u4E3E\u51FA\u7684\u8FD9\u4E2A\u4F8B\u5B50\uFF1A</p>
<pre><code class="language-rust"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color: #282c34"><code><span class="line"><span style="color: #C678DD">trait</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Ore</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Clone</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">(&amp;</span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Ore</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Ore</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> &amp;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">(&amp;</span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">) { </span><span style="color: #61AFEF">println!</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Ore&quot;</span><span style="color: #ABB2BF">); }</span><span style="color: #7F848E; font-style: italic"> // &lt;- print#1</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">#[derive(</span><span style="color: #E5C07B">Clone</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">Copy</span><span style="color: #ABB2BF">)]</span></span>
<span class="line"><span style="color: #C678DD">struct</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Bauxite</span><span style="color: #ABB2BF">;</span><span style="color: #7F848E; font-style: italic"> // \u94DD\u571F\u77FF\uFF08\u8BDD\u8BF4\u8FD9\u4E2A\u535A\u4E3B\u600E\u4E48\u8FD9\u4E48\u559C\u6B22\u6316\u77FF\u554A\uFF09</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Ore</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">for</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Bauxite</span><span style="color: #ABB2BF"> {</span><span style="color: #7F848E; font-style: italic"> // &lt;- Bauxite \u4E0A\u5B9E\u73B0\u4E86 Clone\uFF0COK</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">(&amp;</span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">) { </span><span style="color: #61AFEF">println!</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Bauxite&quot;</span><span style="color: #ABB2BF">); }</span><span style="color: #7F848E; font-style: italic"> // &lt;- print#2</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">struct</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Quarry</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt; {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">ore</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">impl</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Ore</span><span style="color: #ABB2BF">&gt; </span><span style="color: #E5C07B">Quarry</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF">&gt; {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">ore</span><span style="color: #ABB2BF">(&amp;</span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">) -&gt; &amp;</span><span style="color: #E5C07B">T</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        &amp;</span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">.ore</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">mine</span><span style="color: #ABB2BF">(&amp;</span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">) -&gt; </span><span style="color: #C678DD">impl</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Ore</span><span style="color: #ABB2BF"> + &#39;</span><span style="color: #E5C07B">_</span><span style="color: #ABB2BF"> {</span><span style="color: #7F848E; font-style: italic"> // &lt;- \u8FD9\u91CC\u6709\u4E00\u4E2A**\u5F88\u53EF\u7591**\u7684\u9690\u5F0F\u751F\u547D\u5468\u671F</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">self</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">ore</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">clone</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">#[test]</span></span>
<span class="line"><span style="color: #C678DD">fn</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">test_impl</span><span style="color: #ABB2BF">() {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">quarry</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Quarry</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75">ore</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">Bauxite</span><span style="color: #ABB2BF"> };</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">quarry</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">mine</span><span style="color: #ABB2BF">().</span><span style="color: #61AFEF">print</span><span style="color: #ABB2BF">();</span><span style="color: #7F848E; font-style: italic"> // &gt;&gt; Bauxite</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color: #ffffff"><code><span class="line"><span style="color: #CF222E">trait</span><span style="color: #24292F"> </span><span style="color: #953800">Ore</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">Clone</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">print</span><span style="color: #24292F">(</span><span style="color: #CF222E">&amp;</span><span style="color: #0550AE">self</span><span style="color: #24292F">);</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">impl</span><span style="color: #24292F">&lt;</span><span style="color: #953800">T</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">Ore</span><span style="color: #24292F">&gt; </span><span style="color: #953800">Ore</span><span style="color: #24292F"> </span><span style="color: #CF222E">for</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #953800">T</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">print</span><span style="color: #24292F">(</span><span style="color: #CF222E">&amp;</span><span style="color: #0550AE">self</span><span style="color: #24292F">) { </span><span style="color: #8250DF">println!</span><span style="color: #24292F">(</span><span style="color: #0A3069">&quot;Ore&quot;</span><span style="color: #24292F">); }</span><span style="color: #6E7781"> // &lt;- print#1</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">#[derive(</span><span style="color: #953800">Clone</span><span style="color: #24292F">, </span><span style="color: #953800">Copy</span><span style="color: #24292F">)]</span></span>
<span class="line"><span style="color: #CF222E">struct</span><span style="color: #24292F"> </span><span style="color: #953800">Bauxite</span><span style="color: #24292F">;</span><span style="color: #6E7781"> // \u94DD\u571F\u77FF\uFF08\u8BDD\u8BF4\u8FD9\u4E2A\u535A\u4E3B\u600E\u4E48\u8FD9\u4E48\u559C\u6B22\u6316\u77FF\u554A\uFF09</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">impl</span><span style="color: #24292F"> </span><span style="color: #953800">Ore</span><span style="color: #24292F"> </span><span style="color: #CF222E">for</span><span style="color: #24292F"> </span><span style="color: #953800">Bauxite</span><span style="color: #24292F"> {</span><span style="color: #6E7781"> // &lt;- Bauxite \u4E0A\u5B9E\u73B0\u4E86 Clone\uFF0COK</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">print</span><span style="color: #24292F">(</span><span style="color: #CF222E">&amp;</span><span style="color: #0550AE">self</span><span style="color: #24292F">) { </span><span style="color: #8250DF">println!</span><span style="color: #24292F">(</span><span style="color: #0A3069">&quot;Bauxite&quot;</span><span style="color: #24292F">); }</span><span style="color: #6E7781"> // &lt;- print#2</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">struct</span><span style="color: #24292F"> </span><span style="color: #953800">Quarry</span><span style="color: #24292F">&lt;</span><span style="color: #953800">T</span><span style="color: #24292F">&gt; {</span></span>
<span class="line"><span style="color: #24292F">    ore</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">T</span><span style="color: #24292F">,</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CF222E">impl</span><span style="color: #24292F">&lt;</span><span style="color: #953800">T</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">Ore</span><span style="color: #24292F">&gt; </span><span style="color: #953800">Quarry</span><span style="color: #24292F">&lt;</span><span style="color: #953800">T</span><span style="color: #24292F">&gt; {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">ore</span><span style="color: #24292F">(</span><span style="color: #CF222E">&amp;</span><span style="color: #0550AE">self</span><span style="color: #24292F">) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> </span><span style="color: #CF222E">&amp;</span><span style="color: #953800">T</span><span style="color: #24292F"> {</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #CF222E">&amp;</span><span style="color: #0550AE">self</span><span style="color: #CF222E">.</span><span style="color: #24292F">ore</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">mine</span><span style="color: #24292F">(</span><span style="color: #CF222E">&amp;</span><span style="color: #0550AE">self</span><span style="color: #24292F">) </span><span style="color: #CF222E">-&gt;</span><span style="color: #24292F"> </span><span style="color: #CF222E">impl</span><span style="color: #24292F"> </span><span style="color: #953800">Ore</span><span style="color: #24292F"> </span><span style="color: #CF222E">+</span><span style="color: #24292F"> &#39;</span><span style="color: #953800">_</span><span style="color: #24292F"> {</span><span style="color: #6E7781"> // &lt;- \u8FD9\u91CC\u6709\u4E00\u4E2A**\u5F88\u53EF\u7591**\u7684\u9690\u5F0F\u751F\u547D\u5468\u671F</span></span>
<span class="line"><span style="color: #24292F">        </span><span style="color: #0550AE">self</span><span style="color: #CF222E">.</span><span style="color: #8250DF">ore</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">clone</span><span style="color: #24292F">()</span></span>
<span class="line"><span style="color: #24292F">    }</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292F">#[test]</span></span>
<span class="line"><span style="color: #CF222E">fn</span><span style="color: #24292F"> </span><span style="color: #8250DF">test_impl</span><span style="color: #24292F">() {</span></span>
<span class="line"><span style="color: #24292F">    </span><span style="color: #CF222E">let</span><span style="color: #24292F"> quarry </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #953800">Quarry</span><span style="color: #24292F"> { ore</span><span style="color: #CF222E">:</span><span style="color: #24292F"> </span><span style="color: #953800">Bauxite</span><span style="color: #24292F"> };</span></span>
<span class="line"><span style="color: #24292F">    quarry</span><span style="color: #CF222E">.</span><span style="color: #8250DF">mine</span><span style="color: #24292F">()</span><span style="color: #CF222E">.</span><span style="color: #8250DF">print</span><span style="color: #24292F">();</span><span style="color: #6E7781"> // &gt;&gt; Bauxite</span></span>
<span class="line"><span style="color: #24292F">}</span></span>
<span class="line"></span></code></pre></div></code></pre>
<p>\u8F93\u51FA\u4E86 Bauxite\uFF0C\u8BF4\u660E <code>impl</code> \u63A8\u65AD\u51FA\u6765\u7684\u5177\u4F53\u7C7B\u578B\u662F <code>Bauxite</code>\uFF0C\u6D3E\u53D1\u5230\u4E86 <code>print#2</code>\uFF0C\u4E00\u5207\u6B63\u5E38\u{1F914}\u3002</p>
<p>\u4F46\uFF0C\u5F53\u4F60\u5220\u9664\u4E86\u7B2C\u4E00\u884C <code>Clone</code> \u7684\u7EA6\u675F\u540E\uFF0C\u6253\u5370\u51FA\u6765\u7684\u5C31\u53D8\u6210\u4E86 Ore\uFF0C\u6D3E\u53D1\u5230\u4E86 <code>print#1</code>\u{1F632}\u3002\u4E3A\u4EC0\u4E48\uFF1F\u6CE8\u610F <code>impl</code> \u540E\u9762\u90A3\u4E2A\u53EF\u7591\u7684\u9690\u5F0F\u751F\u547D\u5468\u671F\u2026\u2026</p>
<p>\u5728 <code>mine()</code> \u4E2D\uFF0C<code>self.ore()</code> \u7684\u7C7B\u578B\u662F <code>&amp;T</code>\uFF0C\u800C <code>T</code> \u6EE1\u8DB3 <code>Ore</code>\u2026\u2026</p>
<ul>
<li>\u5982\u679C <code>Ore</code> \u540C\u65F6\u6EE1\u8DB3 <code>Clone</code>\uFF0C\u90A3\u4E48\u6839\u636E <a href="https://doc.rust-lang.org/std/ops/trait.Deref.html" target="_blank" rel="noopener"><code>Deref</code></a> \u8BED\u6CD5\u7CD6\uFF0C<code>&amp;T.clone()</code> \u8C03\u7528\u7684\u5C31\u662F <code>&lt;T as Clone&gt;::clone</code>\uFF0C\u5F97\u5230\u4E00\u4E2A <code>T</code>\uFF1B</li>
<li>\u5982\u679C <code>Ore</code> \u4E0D\u6EE1\u8DB3 <code>Clone</code>\uFF0C\u90A3\u4E48\u8C03\u7528\u7684\u5C31\u662F <code>&lt;&amp;T as Clone&gt;::clone</code>\uFF0C\u5F97\u5230\u4E00\u4E2A <code>&amp;T</code>\u3002</li>
</ul>
<p>\u6CE8\u610F\uFF0C\u5728\u8FD9\u4E2A\u5B9E\u73B0\u5757\u91CC\uFF0C\u5E76\u6CA1\u6709\u5728 <code>T</code> \u4E0A\u7EA6\u675F <code>Clone</code>\uFF0C\u5373\u4F7F <code>Bauxite</code> \u5B9E\u73B0\u4E86 <code>Clone</code> \u4E5F\u4F1A\u88AB\u5FFD\u7565\u3002<code>mine()</code> \u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A <code>impl Ore</code>\uFF0C\u6240\u4EE5\u2026\u2026</p>
<ul>
<li>\u5982\u679C\u8FD4\u56DE\u503C\u662F <code>T</code>\uFF0C\u800C\u5728\u5B9E\u73B0\u5757\u91CC\u7EA6\u675F\u4E86 <code>T</code> \u5B9E\u73B0 <code>Ore</code>\uFF0C<code>T</code> \u53EF\u4EE5\u62BD\u8C61\u4E3A <code>impl Ore</code>\uFF1B</li>
<li>\u5982\u679C\u8FD4\u56DE\u503C\u662F <code>&amp;T</code>\uFF0C\u5B9E\u73B0\u5757\u91CC\u7EA6\u675F\u4E86 <code>T</code> \u5B9E\u73B0 <code>Ore</code>\uFF0C\u800C<s>\u8BE1\u8BA1\u591A\u7AEF\u7684</s> <code>Ore</code> \u58F0\u660E\uFF1A\u5BF9\u6240\u6709\u5B9E\u73B0\u4E86 <code>Ore</code> \u7684 <code>T</code>\uFF0C<code>&amp;T</code> \u4E5F\u5B9E\u73B0 <code>Ore</code>\uFF01\u6240\u4EE5 <code>&amp;T</code> \u4E5F\u53EF\u4EE5\u62BD\u8C61\u4E3A <code>impl Ore</code>\u3002</li>
</ul>
<p>\u5982\u679C\u8FD4\u56DE\u503C\u4E0D\u7528 <code>impl</code>\uFF0C\u90A3\u4E48\u8FD4\u56DE <code>&amp;T</code> \u5176\u5B9E\u7B26\u5408\u751F\u547D\u5468\u671F\u64E6\u9664\u6761\u4EF6\uFF0C\u4E0D\u7528\u6807\u6CE8\u751F\u547D\u5468\u671F\u3002\u4F46\u7528\u4E86 <code>impl</code>\uFF0C\u6240\u4EE5\u5FC5\u987B\u5728 <code>impl</code> \u540E\u9762\u52A0\u4E00\u4E2A <code>'_</code>\u3002\u800C\u62E5\u6709\u6240\u6709\u6743\u7684 <code>T</code> \u5F53\u7136\u4E5F\u7B26\u5408 <code>'_</code>\uFF0C\u6240\u4EE5\u2026\u2026</p>
<p>\u4E24\u79CD\u60C5\u51B5\u90FD\u7F16\u8BD1\u901A\u8FC7\uFF0C\u4F46\u6D3E\u53D1\u5230\u4E86\u5B8C\u5168\u4E0D\u540C\u7684\u5B9E\u9645\u7C7B\u578B\u{1F635}\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u5982\u679C <code>Ore</code> \u540C\u65F6\u4E3A <code>()</code> \u81EA\u52A8\u5B9E\u73B0\uFF0C\u800C\u4F60\u624B\u6296\u591A\u52A0\u4E86\u4E00\u4E2A\u5206\u53F7\u628A\u8FD4\u56DE\u503C\u53D8\u6210\u4E86 <code>()</code>\uFF0C\u4F46\u7B7E\u540D\u91CC\u53C8\u7528\u4E86 <code>impl Ore</code>\uFF0C\u7F16\u8BD1\u5B8C\u7F8E\u901A\u8FC7\uFF0C\u8FD0\u884C\u65F6\u53D1\u751F\u4EC0\u4E48\uFF0C\u90FD\u4E0D\u6562\u60F3\u4E86\u{1F643}\uFF01</p>
</article>
</div>`})}}};export{i as category,F as date,E as default,A as tags,B as title};
