---
export interface Props {
  toc: [string, string][]
}

const { toc } = Astro.props;
---

<section id="toc-container">
  <aside id="toc">
    <button id="toc-to-top" class="cursor-pointer" onclick="window.scrollTo({ top: 0, behavior: 'smooth' })" aria-label="Scroll to top"><div class="i-mdi-arrow-up-circle"></div></button>
    {
      toc.map(([heading, id]) => (
        <span class="font-bold">
          <a href={`#${id}`}>{heading}</a>
        </span>
      )).reduce((list, line) => {
        if (list.length) list.push((<span class="hidden" role="separator">|</span>), line);
        else list.push(line);
        return list;
      }, [])
    }
  </aside>
</section>

<style>
  #toc-container {
    @apply relative lg:(sticky top-6) w-full ;
  }
  #toc {
    @apply
      flex flex-col w-full items-start
      overflow-y-auto
      gap-y-2
      lg:(
        absolute left-full ml-4 w-fit
      )
    ;
    max-height: 25vh;
    max-height: 25dvh;
  }

  @media (min-width: 1024px) {
    #toc {
      min-width: min-content;
      width: calc(calc(calc(100vw - 100%) / 2) - 2.5rem);
      width: calc(calc(calc(100dvw - 100%) / 2) - 2.5rem);
      max-width: max-content;
      max-height: 50vh;
      max-height: 50dvh;
    }
  }

  #toc a {
    @apply border-none! p-unset text-inherit;
  }

  #toc > * {
    @apply text-front lh-tight @hover:text-one-front
  }

  #toc-to-top {
    @apply lt-lg:hidden;
  }

</style>
