{"version":3,"sources":["webpack:///./src/pages/posts.js"],"names":["ListPostsPage","postsList","data","allMarkdownRemark","edges","yearGroup","groupBy","node","frontmatter","year","title","className","Object","keys","sort","a","b","map","key","id","date","to","fields","slug"],"mappings":"4FAAA,uFAmEeA,UAlCO,SAAC,GAAc,IAC7BC,EAD4B,EAAXC,KACAC,kBAAkBC,MACnCC,EAAYC,IAAQL,GAAW,qBAAGM,KAAgBC,YAAYC,QAEpE,OACE,6BACE,kBAAC,IAAD,CAAKC,MAAM,OACX,wBAAIC,UAAU,SAAd,MACCC,OAAOC,KAAKR,GACVS,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,KACnBE,KAAI,SAAAR,GAAI,OACP,6BAASS,IAAKT,GACZ,4BAAKA,GACL,wBAAIE,UAAU,eACXN,EAAUI,GAAMQ,KAAI,gBAAGV,EAAH,EAAGA,KAAH,OACnB,wBAAIW,IAAKX,EAAKY,GAAIR,UAAU,oBAC1B,0BAAMA,UAAU,yBACbJ,EAAKC,YAAYY,MAEpB,kBAAC,OAAD,CACET,UAAU,wBACVU,GAAE,IAAMd,EAAKe,OAAOC,MAEnBhB,EAAKC,YAAYE","file":"component---src-pages-posts-js-d24b54be191697f815f2.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport groupBy from 'lodash/groupBy';\n\nimport SEO from '../components/SEO';\n\nimport '../styles/pages/posts.scss';\n\nexport const query = graphql`\n  query QueryListPosts {\n    allMarkdownRemark(\n      filter: { fields: { quarter: { eq: \"posts\" } } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"M/D\")\n            year: date(formatString: \"Y\")\n            category\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ListPostsPage = ({ data }) => {\n  const postsList = data.allMarkdownRemark.edges;\n  const yearGroup = groupBy(postsList, ({ node }) => node.frontmatter.year);\n\n  return (\n    <div>\n      <SEO title=\"文章\" />\n      <h1 className=\"title\">文章</h1>\n      {Object.keys(yearGroup)\n        .sort((a, b) => b - a)\n        .map(year => (\n          <section key={year}>\n            <h2>{year}</h2>\n            <ul className=\"posts-group\">\n              {yearGroup[year].map(({ node }) => (\n                <li key={node.id} className=\"posts-group-item\">\n                  <span className=\"posts-group-item-date\">\n                    {node.frontmatter.date}\n                  </span>\n                  <Link\n                    className=\"posts-group-item-link\"\n                    to={`/${node.fields.slug}`}\n                  >\n                    {node.frontmatter.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </section>\n        ))}\n    </div>\n  );\n};\n\nexport default ListPostsPage;\n"],"sourceRoot":""}