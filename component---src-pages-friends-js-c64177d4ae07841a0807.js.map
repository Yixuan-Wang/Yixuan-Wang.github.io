{"version":3,"sources":["webpack:///./src/components/CardFriend.js","webpack:///./src/components/SEO.js","webpack:///./src/pages/friends.js"],"names":["CardFriend","friend","name","avatar","link","blog","className","href","target","rel","src","SEO","type","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","siteTitle","htmlAttributes","content","property","withPrefix","concat","defaultProps","Friends","friends","data","issues","childYaml","console","log","map","key"],"mappings":"6FAAA,6CA2CeA,IApCf,YAAiC,IAAXC,EAAU,EAAVA,OACZC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,OAAQC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAE5B,OACE,yBAAKC,UAAU,eAEb,uBACEA,UAAU,mBACVC,KAAMH,EACNI,OAAO,SACPC,IAAI,uBAEJ,yBAAKH,UAAU,qBAAqBI,IAAKP,KAG3C,uBACEG,UAAU,mBACVC,KAAMF,EACNG,OAAO,SACPC,IAAI,uBAEHP,M,kCC5BT,iDAYA,SAASS,EAAT,GAAwD,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACpCC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAYJ,EAAKG,aAAaJ,MAEpC,OACE,kBAAC,SAAD,CACEM,eAAgB,CACdR,QAEFE,MAAOA,EAAWA,EAAN,MAAiBK,EAAcA,EAC3CN,KAAM,CACJ,CACEb,KAAK,cACLqB,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASP,GAEX,CACEQ,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAASX,GAEX,CACEY,SAAS,eACTD,QAASF,GAEX,CACEG,SAAS,WACTD,QAASE,qBAAW,eAEtBC,OAAOX,KAKfJ,EAAIgB,aAAe,CACjBb,KAAK,UACLC,KAAM,GACNF,YAAY,GACZD,KAAK,UACLI,MAAM,IAUOL,O,yDCjFf,wDAkDeiB,UA3BC,SAAC,GAAc,IACrBC,EADoB,EAAXC,KACQC,OAAOC,UAAxBH,QAER,OADAI,QAAQC,IAAIL,GAEV,6BACE,kBAAC,IAAD,CAAKb,MAAM,OACX,wBAAIV,UAAU,SAAd,MACA,uBAAGA,UAAU,YAAb,UACU,IACR,uBACEC,KAAK,0EACLC,OAAO,SACPC,IAAI,uBAHN,gCAMK,IARP,aAWA,6BACGoB,EAAQM,KAAI,SAAAlC,GAAM,OACjB,kBAAC,IAAD,CAAYmC,IAAKnC,EAAOC,KAAMD,OAAQA","file":"component---src-pages-friends-js-c64177d4ae07841a0807.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../components/Icon';\n\nimport '../styles/components/card-friend.scss';\n\nfunction CardFriend({ friend }) {\n  const { name, avatar, link, blog } = friend;\n\n  return (\n    <div className=\"card-friend\">\n      {/* <img className=\"card-friend-avatar\" src={avatar} /> */}\n      <a\n        className=\"card-friend-link\"\n        href={link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img className=\"card-friend-avatar\" src={avatar} />\n      </a>\n      {/* <span className=\"card-friend-name\">{name}</span> */}\n      <a\n        className=\"card-friend-name\"\n        href={blog}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {name}\n      </a>\n    </div>\n  );\n}\n\nCardFriend.propTypes = {\n  friend: PropTypes.shape({\n    name: PropTypes.string,\n    avatar: PropTypes.string,\n    link: PropTypes.string,\n    blog: PropTypes.string,\n  }),\n};\n\nexport default CardFriend;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql, withPrefix } from 'gatsby';\n\nfunction SEO({ type, description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const siteTitle = site.siteMetadata.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title ? `${title} | ${siteTitle}` : siteTitle}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: type,\n        },\n        {\n          property: `og:site-name`,\n          content: siteTitle,\n        },\n        {\n          property: `og:image`,\n          content: withPrefix('/icon.png'),\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `zh-Hans`,\n  meta: [],\n  description: ``,\n  type: `webpage`,\n  title: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport SEO from '../components/SEO';\nimport CardFriend from '../components/CardFriend';\n\nexport const query = graphql`\n  fragment Friends on Issues {\n    childYaml {\n      friends {\n        avatar\n        blog\n        link\n        name\n      }\n    }\n  }\n  query QueryFriends {\n    issues(title: { eq: \"friends\" }) {\n      ...Friends\n    }\n  }\n`;\n\nconst Friends = ({ data }) => {\n  const { friends } = data.issues.childYaml;\n  console.log(friends);\n  return (\n    <div>\n      <SEO title=\"ÊúãÂèã\" />\n      <h1 className=\"title\">ÊúãÂèã</h1>\n      <p className=\"subtitle\">\n        Áî≥ËØ∑Ê∑ªÂä†ÂèãÈìæÂú®{' '}\n        <a\n          href=\"https://github.com/Yixuan-Wang/blog-contents/issues/2#issue-comment-box\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Yixuan-Wang/blog-contents #2\n        </a>{' '}\n        ‰∏ãËØÑËÆ∫Âç≥ÂèØü§ó~ÔºÅ\n      </p>\n      <div>\n        {friends.map(friend => (\n          <CardFriend key={friend.name} friend={friend} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;\n"],"sourceRoot":""}