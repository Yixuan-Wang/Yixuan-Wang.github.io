name: Build & Deploy

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - contents-update
      - contents-issues-update
  push:
    branches:
      - v4

concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Contents
        uses: actions/checkout@v3
        with:
          repository: Yixuan-Wang/blog-contents
          ref: v4
          path: contents

      - name: Cache `pnpm` Modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Setup `pnpm`
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install Node Packages
        run: pnpm install

      # - name: Create Env
      #   env:
      #     ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #   # used to pull issues
      #   run: |
      #     touch .env.local
      #     echo ACCESS_TOKEN=$ACCESS_TOKEN > .env.local

      - name: Build
        env:
          BUILD_SITE_URL: "https://blog.yixuan-wang.site"
          BUILD_BASE_URL: "/next"
          CONTENTS_DIR: "contents"
          GITHUB_USER: "Yixuan-Wang"
          GITHUB_REPO: "blog-contents"
          GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: pnpm run build

      # - name: Deploy GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./dist
      #     publish_branch: gh-pages
      #     cname: blog.yixuan-wang.site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Server
        uses: easingthemes/ssh-deploy@v2
        with:
          SSH_PRIVATE_KEY: ${{ secrets.MIRROR_SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.MIRROR_HOST }}
          REMOTE_USER: ${{ secrets.MIRROR_USER }}
          SOURCE: dist/.
          TARGET: ${{ secrets.MIRROR_TARGET_NEXT }}
